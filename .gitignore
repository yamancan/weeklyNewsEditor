# Dependencies
/node_modules
/dist

# Environment variables
.env
.env.*
!.env.example

# Log files
*.log
logs
*.logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# IDEs and editors
.idea
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.sublime-workspace

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Build artifacts
*.tsbuildinfo

# Telegram session file (if you decided to keep it in the project root)
telegram_session
*.session

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env.test
.env.production
.env.development*

# parcel-bundler cache (https://parceljs.org/)
.cache

# Next.js build output
.next
out

# Nuxt.js build output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# Compiled output
dist
build

# Session files for Telegram client (if used)
session_name.*
*.session 

# -----------------------------------------------------------------------------
# ULTIMATE SECURITY ADDITIONS - BE CAREFUL WITH BROAD PATTERNS
# -----------------------------------------------------------------------------

# Generic secret files
secrets.*
credentials.*
*.secret

# Private keys, certificates, and keystores
*.key
*.pem # Caution: Ensure public certificates are not unintentionally ignored if they also use .pem
*.p12
*.pfx
*.pkcs12
*.keychain

# Specific tool credential files (usually global, but ignore if in project)
.netrc
_netrc
*.pgpass # PostgreSQL password file

# Infrastructure-as-Code local state/secrets
.terraform/ # Terraform state and configuration directory
terraform.tfstate
terraform.tfstate.backup
*.tfstate
*.tfstate.backup
.tfvars # Terraform variable files, may contain secrets
*.tfvars
*.tfvars.json
.kitchen/ # Test Kitchen local files

# Unencrypted secrets from tools like SOPS
*.sops.* # e.g., secrets.dev.yaml from sops

# Database dumps (unless they are versioned schema definitions)
*.sql
*.dump
*.sql.gz
*.dump.gz

# Editor backup / swap files / temporary files
*~
*.swp
*.swo
*.bak
*.old
*.tmp
*.temp

# Shell history files (if accidentally copied into project)
.*_history
.*history # e.g., .bash_history, .zsh_history

# Output files that might contain sensitive data from scripts
*.out

# Build secrets or local config overrides
# Example: local_settings.py, Web.Local.config
local_settings.*
settings_local.*
*Local.config
*.local.yml
*.local.yaml
*.local.json

# Cloud SDK credentials / configuration (usually global, but ignore if in project)
.aws/
.azure/
.gcp/
.oci/

# Mobile provisioning profiles
*.mobileprovision

# NuGet local packages config
packages.config 